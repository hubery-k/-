C51 COMPILER V9.52.0.0   EX12                                                              01/24/2015 23:03:34 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE EX12
OBJECT MODULE PLACED IN ex12.OBJ
COMPILER INVOKED BY: D:\Keil\C51\BIN\C51.EXE ex12.c BROWSE DEFINE(STC12) DEBUG OBJECTEXTEND

line level    source

   1          /*******************************************************************************  
   2          * 文件名称：DS18B20温度传感器实验
   3          * 实验目的：1.掌握单总线通讯基本特点和工作时序
   4          *           2.掌握51单片机模拟单总线时序的程序设计方法
   5          *           3.掌握DS18B20温度传感器的操作方法
   6          * 程序说明：1.通过数码管显示实时温度数据
   7          *           2.DS18B20数据线引脚DQ与单片机P1.4引脚连接
   8          *           3.测量精度为1摄氏度
   9          *           4.数码管驱动函数采用IO方式编写，将跳线J13调整为IO模式
  10          * 硬件说明：IAP15F2K61S2@11.0592MHz
  11          * 日期版本：2012-9-5/V1.0a 
  12          *******************************************************************************/
  13          
  14          #include "reg52.h"  //定义51单片机特殊功能寄存器
  15          #include "onewire.h"  //单总线函数库
  16          #include "absacc.h"
  17          
  18          sfr AUXR = 0x8E; 
  19          
  20          unsigned char dspbuf[8] = {10,10,10,10,10,10,10,10};//显示缓冲区
  21          unsigned char dspcom = 0;
  22          unsigned char intr;
  23          bit temper_flag = 0;//温度读取标志
  24          code unsigned char tab[] = {0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90,
  25                                      0xff};
  26          
  27          void display(void);
  28          
  29          void cls_buzz()
  30          {
  31   1              P2 = ((P2&0x1f)|0xA0); 
  32   1              P0 = 0x00;
  33   1              P2 &= 0x1f;
  34   1      }
  35          void cls_led()
  36          {
  37   1              P2 = ((P2&0x1f)|0x80); 
  38   1              P0 = 0xFF;
  39   1              P2 &= 0x1f;
  40   1      }
  41          
  42          //主函数
  43          void main(void)
  44          { 
  45   1          unsigned char temperature;
  46   1              
  47   1              cls_buzz();cls_led();
  48   1          
  49   1              AUXR |= 0x80;
  50   1              TMOD &= 0xF0;
  51   1              TL0 = 0xCD;     
  52   1              TH0 = 0xD4;     
  53   1              TF0 = 0;        
  54   1              TR0 = 1;
  55   1              ET0 = 1;
C51 COMPILER V9.52.0.0   EX12                                                              01/24/2015 23:03:34 PAGE 2   

  56   1              EA = 1;
  57   1              
  58   1          while(1)
  59   1          {
  60   2              if(temper_flag)
  61   2                      {
  62   3                              temper_flag = 0;
  63   3                              temperature = rd_temperature();  //读温度         
  64   3              }
  65   2                      
  66   2                      //显示数据更新    
  67   2                      (temperature>=10)?(dspbuf[6] = temperature/10):(dspbuf[6]=10);       
  68   2                      dspbuf[7] = temperature%10; 
  69   2          }
  70   1      }
  71          
  72          //定时器中断服务函数
  73          void isr_timer_0(void)  interrupt 1  //默认中断优先级 1
  74          {
  75   1          display();
  76   1              if(++intr == 100)  //1ms执行一次
  77   1              {
  78   2              intr = 0;
  79   2                      temper_flag = 1;  //100ms温度读取标志位置1
  80   2          }
  81   1      }
  82          
  83          //显示函数
  84          void display(void)
  85          {   
  86   1              P2 = ((P2&0x1f)|0xE0); 
  87   1              P0 = 0xff;
  88   1              P2 &= 0x1f;
  89   1      
  90   1              P0 = 1<<dspcom; 
  91   1              P2 = ((P2&0x1f)|0xC0); 
  92   1              P2 &= 0x1f;
  93   1              
  94   1              P0 = tab[dspbuf[dspcom]];       
  95   1          P2 = ((P2&0x1f)|0xE0); 
  96   1              P2 &= 0x1f;
  97   1              
  98   1          if(++dspcom == 8){
  99   2              dspcom = 0;
 100   2          }    
 101   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    242    ----
   CONSTANT SIZE    =     11    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     10       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
