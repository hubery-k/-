C51 COMPILER V9.59.0.0   MAIN                                                              06/07/2023 11:06:30 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\KEIL\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main.ls
                    -t) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "main.h"
   2          
   3          /*******定义变量*******/
   4          uc Time[]={0X50,0X59,0X16};
   5          uc KeyNum;
   6          uc Data_Interface;  //数据子界面
   7          uc P_Interface; //参数子界面
   8          f T;
   9          f adc;
  10          c Hour_P=17;  //小时参数(0~23)
  11          c T_P=25; //温度参数(0~99)
  12          uc LP=4;  //指示灯参数(4~8)
  13          c HP_temp=17;
  14          c TP_temp=25;
  15          uc LP_temp=4;
  16          
  17          bit Interface;  //父界面切换（数据界面、参数界面）
  18          bit Mode; //（0-亮、1-暗）
  19          bit CLOCK_Flag;   //时间采集标志
  20          bit T_Flag;   //温度采集标志
  21          bit ADC_Flag; //AD采集标志
  22          bit L1_Flag;  //L1亮灭标志
  23          bit L2_Flag;  //L2亮灭标志
  24          bit L3_Flag;  //L3亮灭标志
  25          bit LP_Flag;  //(L4~L8)亮灭标志
  26          bit KEY_flag; //按键键值读取标志
  27          bit led_run;
  28          
  29          /*******硬件初始化函数*******/
  30          void Hardware_Init()
  31          {
  32   1        LED_Init();
  33   1        RB_Init();
  34   1        Timer0Init();
  35   1        DS1302_WriteTime(Time);
  36   1        DS18B20_ConvertT();
  37   1        Delay750ms();
  38   1      }
  39          
  40          /*******任务处理函数*******/
  41          
  42          void Task_Processing()
  43          {
  44   1        /*50ms读取一次时间数据*/
  45   1        uc Time_temp;
  46   1        if(CLOCK_Flag==1)
  47   1        {
  48   2          CLOCK_Flag=0;
  49   2          DS1302_ReadTime(Time);
  50   2          Time_temp=Time[2]/16*10+Time[2]%16;
  51   2          /*L1*/
  52   2          if((Time_temp>Hour_P && Hour_P<8) || (Time_temp>Hour_P && Hour_P>8))
  53   2          {
  54   3            //情况1：大于小时参数且小于8点。情况2：是大于小时参数且大于8点
C51 COMPILER V9.59.0.0   MAIN                                                              06/07/2023 11:06:30 PAGE 2   

  55   3            L1_Flag=1;
  56   3          }
  57   2          else{L1_Flag=0;}
  58   2        }
  59   1        /*50ms读取一次AD采集的数据*/
  60   1        if(ADC_Flag==1)
  61   1        {
  62   2          ADC_Flag=0;
  63   2          adc=PCF8591_ReadAD(0)*(5.0/255);
  64   2          if(adc<2.5)
  65   2          {
  66   3            Mode=1; //暗状态
  67   3            LP_Flag=1;
  68   3          }
  69   2          else
  70   2          {
  71   3            Mode=0; //亮状态
  72   3            LP_Flag=0;
  73   3          }
  74   2        }
  75   1        /*100ms读取一次温度数据*/
  76   1        if(T_Flag==1)
  77   1        {
  78   2          T_Flag=0;
  79   2          DS18B20_ConvertT();
  80   2          T=DS18B20_ReadT();
  81   2          /*L2*/
  82   2          if(T < T_P){L2_Flag=1;}
  83   2          else{L2_Flag=0;}
  84   2        }
  85   1      }
  86          
  87          /*******使用LED函数*******/
  88          void USE_LED()
  89          {
  90   1        LED_Init();
  91   1        
  92   1        if(L1_Flag==1){L1=0;}
  93   1        else{L1=1;}
  94   1        if(L2_Flag==1){L2=0;}
  95   1        else{L2=1;}
  96   1        if(L3_Flag==1){L3=0;}
  97   1        else{L3=1;}
  98   1        if(LP_Flag==1)
  99   1        {
 100   2          if(LP==4){L4=0;}
 101   2          else{L4=1;}
 102   2          if(LP==5){L5=0;}
 103   2          else{L5=1;}
 104   2          if(LP==6){L6=0;}
 105   2          else{L6=1;}
 106   2          if(LP==7){L7=0;}
 107   2          else{L7=1;}
 108   2          if(LP==8){L8=0;}
 109   2          else{L8=1;}
 110   2        }
 111   1        else{L4=1;L5=1;L6=1;L7=1;L8=1;}
 112   1        
 113   1        P2&=0X1F;
 114   1      }
 115          
 116          /*******使用KEY函数*******/
C51 COMPILER V9.59.0.0   MAIN                                                              06/07/2023 11:06:30 PAGE 3   

 117          
 118          void USE_KEY()
 119          {
 120   1        if(KEY_flag==1)
 121   1        {
 122   2          KEY_flag=0;
 123   2          KeyNum=KEY();
 124   2          /*S4-界面切换按键*/
 125   2          if(KeyNum==4)
 126   2          {
 127   3            Interface=~Interface;
 128   3            Data_Interface=0;
 129   3            P_Interface=0;
 130   3            /*在退出参数界面后更新参数数值*/
 131   3            if(Interface==0)
 132   3            {
 133   4              Hour_P = HP_temp;
 134   4              T_P = TP_temp;
 135   4              LP = LP_temp;
 136   4            }
 137   3          }
 138   2          /*S5-子界面切换按键*/
 139   2          if(KeyNum==5)
 140   2          {
 141   3            /*数据界面下*/
 142   3            if(Interface==0)
 143   3            {
 144   4              Data_Interface++;
 145   4              Data_Interface%=3;
 146   4            }
 147   3            /*参数界面下*/
 148   3            else if(Interface==1)
 149   3            {
 150   4              P_Interface++;
 151   4              P_Interface%=3;
 152   4            }
 153   3          }
 154   2          /*S8-参数减按键*/
 155   2          if(KeyNum==8)
 156   2          {
 157   3            /*参数界面下*/
 158   3            if(Interface==1)
 159   3            {
 160   4              if(P_Interface==0){HP_temp-=1;}
 161   4              else if(P_Interface==1){TP_temp-=1;}
 162   4              else if(P_Interface==2){LP_temp-=1;}
 163   4            }
 164   3            if(Hour_P<0){Hour_P=23;}
 165   3            if(T_P<0){T_P=99;}
 166   3            if(LP<4){LP=8;}
 167   3          }
 168   2          /*S9-参数加按键*/
 169   2          if(KeyNum==9)
 170   2          {
 171   3            /*参数界面下*/
 172   3            if(Interface==1)
 173   3            {
 174   4              if(P_Interface==0){HP_temp+=1;}
 175   4              else if(P_Interface==1){TP_temp+=1;}
 176   4              else if(P_Interface==2){LP_temp+=1;}
 177   4            }
 178   3            if(Hour_P>23){Hour_P=0;}
C51 COMPILER V9.59.0.0   MAIN                                                              06/07/2023 11:06:30 PAGE 4   

 179   3            if(T_P>99){T_P=0;}
 180   3            if(LP>8){LP=4;}
 181   3          }
 182   2        }
 183   1      }
 184          
 185          
 186          /*******使用SMG函数*******/
 187          
 188          void USE_SMG()
 189          {
 190   1        /*数据界面*/
 191   1        if(Interface==0)
 192   1        {
 193   2          /*时间数据显示*/
 194   2          if(Data_Interface==0)
 195   2          {
 196   3            Nixie_SetBuf(0,Nodot_SMG[Time[2]/16]);
 197   3            Nixie_SetBuf(1,Nodot_SMG[Time[2]%16]);
 198   3            Nixie_SetBuf(2,0XBF);
 199   3            Nixie_SetBuf(3,Nodot_SMG[Time[1]/16]);
 200   3            Nixie_SetBuf(4,Nodot_SMG[Time[1]%16]);
 201   3            Nixie_SetBuf(5,0XBF);
 202   3            Nixie_SetBuf(6,Nodot_SMG[Time[0]/16]);
 203   3            Nixie_SetBuf(7,Nodot_SMG[Time[0]%16]);
 204   3          }
 205   2          /*温度数据显示*/
 206   2          else if(Data_Interface==1)
 207   2          {
 208   3            Nixie_SetBuf(0,Nodot_SMG[12]);
 209   3            Nixie_SetBuf(1,0XFF);
 210   3            Nixie_SetBuf(2,0XFF);
 211   3            Nixie_SetBuf(3,0XFF);
 212   3            Nixie_SetBuf(4,0XFF);
 213   3            Nixie_SetBuf(5,Nodot_SMG[((ui)(T*10))/100]);
 214   3            Nixie_SetBuf(6,dot_SMG[((ui)(T*10))/10%10]);
 215   3            Nixie_SetBuf(7,Nodot_SMG[((ui)(T*10))%10]);
 216   3          }
 217   2          /*亮暗状态显示*/
 218   2          else if(Data_Interface==2)
 219   2          {
 220   3            Nixie_SetBuf(0,Nodot_SMG[14]);
 221   3            Nixie_SetBuf(1,0XFF);
 222   3            Nixie_SetBuf(2,dot_SMG[((ui)(adc*100))/100]);
 223   3            Nixie_SetBuf(3,Nodot_SMG[((ui)(adc*100))/10%10]);
 224   3            Nixie_SetBuf(4,Nodot_SMG[((ui)(adc*100))%10]);
 225   3            Nixie_SetBuf(5,0XFF);
 226   3            Nixie_SetBuf(6,0XFF);
 227   3            Nixie_SetBuf(7,Nodot_SMG[Mode]);
 228   3          }
 229   2        }
 230   1        /*参数界面*/
 231   1        else if(Interface==1)
 232   1        {
 233   2          /*时间参数*/
 234   2          if(P_Interface==0)
 235   2          {
 236   3            Nixie_SetBuf(0,0X8C); //标识符-P
 237   3            Nixie_SetBuf(1,Nodot_SMG[1]); //编号-1
 238   3            Nixie_SetBuf(2,0XFF);
 239   3            Nixie_SetBuf(3,0XFF);
 240   3            Nixie_SetBuf(4,0XFF);
C51 COMPILER V9.59.0.0   MAIN                                                              06/07/2023 11:06:30 PAGE 5   

 241   3            Nixie_SetBuf(5,0XFF);
 242   3            Nixie_SetBuf(6,Nodot_SMG[HP_temp/10]);  //小时参数(0~23)
 243   3            Nixie_SetBuf(7,Nodot_SMG[HP_temp%10]);
 244   3          }
 245   2          /*温度参数*/
 246   2          else if(P_Interface==1)
 247   2          {
 248   3            Nixie_SetBuf(0,0X8C); //标识符-P
 249   3            Nixie_SetBuf(1,Nodot_SMG[2]); //编号-2
 250   3            Nixie_SetBuf(2,0XFF);
 251   3            Nixie_SetBuf(3,0XFF);
 252   3            Nixie_SetBuf(4,0XFF);
 253   3            Nixie_SetBuf(5,0XFF);
 254   3            Nixie_SetBuf(6,Nodot_SMG[TP_temp/10]);  //温度参数(0~99)
 255   3            Nixie_SetBuf(7,Nodot_SMG[TP_temp%10]);
 256   3          }
 257   2          /*指示灯参数*/
 258   2          else if(P_Interface==2)
 259   2          {
 260   3            Nixie_SetBuf(0,0X8C); //标识符-P
 261   3            Nixie_SetBuf(1,Nodot_SMG[3]); //编号-3
 262   3            Nixie_SetBuf(2,0XFF);
 263   3            Nixie_SetBuf(3,0XFF);
 264   3            Nixie_SetBuf(4,0XFF);
 265   3            Nixie_SetBuf(5,0XFF);
 266   3            Nixie_SetBuf(6,0XFF); 
 267   3            Nixie_SetBuf(7,Nodot_SMG[LP_temp]);//指示灯（4-8）
 268   3          }
 269   2        }
 270   1      }
 271          
 272          /*******主函数*******/
 273          void main()
 274          {
 275   1        Hardware_Init();
 276   1        while(1)
 277   1        {
 278   2          Task_Processing();
 279   2          USE_SMG();
 280   2          USE_KEY();
 281   2          if(led_run==1){led_run=0;USE_LED();}
 282   2        }
 283   1      }
 284          
 285          /*******中断函数*******/
 286          void Timer0_Routine() interrupt 1
 287          {
 288   1        static uc KEY_Count;
 289   1        static uc SMG_Count;
 290   1        static uc CLOCK_Count;
 291   1        static uc ADC_Count;
 292   1        static uc T_Count;
 293   1        static ui Dim_Count;
 294   1        static ui Lignt_Count;
 295   1        
 296   1        led_run=1;
 297   1        KEY_Count++;
 298   1        if(KEY_Count==10)
 299   1        {
 300   2          KEY_Count=0;
 301   2          KEY_flag=1;
 302   2        }
C51 COMPILER V9.59.0.0   MAIN                                                              06/07/2023 11:06:30 PAGE 6   

 303   1        SMG_Count++;
 304   1        if(SMG_Count==2)
 305   1        {
 306   2          SMG_Count=0;
 307   2          Nixie_Loop();
 308   2        }
 309   1        CLOCK_Count++;
 310   1        if(CLOCK_Count==50)
 311   1        {
 312   2          CLOCK_Count=0;
 313   2          CLOCK_Flag=1;
 314   2        }
 315   1        ADC_Count++;
 316   1        if(ADC_Count==100)
 317   1        {
 318   2          ADC_Count=0;
 319   2          ADC_Flag=1;
 320   2        }
 321   1        T_Count++;
 322   1        if(T_Count==200)
 323   1        {
 324   2          T_Count=0;
 325   2          T_Flag=1;
 326   2        }
 327   1        /*L3*/
 328   1        if(Mode==1) //暗->亮
 329   1        {
 330   2          if(L3_Flag==0)
 331   2          {
 332   3            Dim_Count++;
 333   3            if(Dim_Count==3000)
 334   3            {
 335   4              Dim_Count=0;
 336   4              L3_Flag=1;
 337   4            }
 338   3          }
 339   2          else{Lignt_Count=0;}
 340   2        }
 341   1        else  //亮->暗
 342   1        {
 343   2          if(L3_Flag==1)
 344   2          {
 345   3            Lignt_Count++;
 346   3            if(Lignt_Count==3000)
 347   3            {
 348   4              Lignt_Count=0;
 349   4              L3_Flag=0;
 350   4            }
 351   3          }
 352   2          else{Dim_Count=0;}
 353   2        }
 354   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1660    ----
   CONSTANT SIZE    =     32    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     29    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =     11    ----
C51 COMPILER V9.59.0.0   MAIN                                                              06/07/2023 11:06:30 PAGE 7   

END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
