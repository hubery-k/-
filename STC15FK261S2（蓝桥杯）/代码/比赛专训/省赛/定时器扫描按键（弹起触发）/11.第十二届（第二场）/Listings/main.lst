C51 COMPILER V9.59.0.0   MAIN                                                              03/18/2023 19:05:42 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\KEIL\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main.ls
                    -t) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "LED.h"
   2          #include "RB.h"
   3          #include "Nixie.h"
   4          #include "Timer.h"
   5          #include "KEY.h"
   6          #include "ADC.h"
   7          
   8          uc code Nodot_SMG[]={~0x3F,~0x06,~0x5B,~0x4F,~0x66,~0x6D,~0x7D,~0x07,~0x7F,~0x6F,~0x77,~0x7C,~0x39,~0x5E,~
             -0x79,~0x71};
   9          uc code dot_SMG[]={~0xbf,~0x86,~0xdb,~0xcf,~0xe6,~0xed,~0xfd,~0x87,~0xff,~0xef,~0xf7,~0xfc,~0xb9,~0xde,~0x
             -f9,~0xf1};
  10          uc KeyNum;
  11          f adc_value;    //采集的电压值数据
  12          ui adc_IntValue;
  13          uc Interface;   //界面
  14          uc Serial_Num=1;    //编号(默认值为1)
  15          f Save_V;   //保存的电压数据
  16          ui Save_F;    //保存的频率数据
  17          ui PressCount;    //S7按下时间计数
  18          uli F;    //频率
  19          uli F_temp;  //临时变量
  20          uli T;    //周期
  21          
  22          bit AD_Flag;    //AD采集标志位（1-采集，0-不采集）
  23          bit PressTime_flag;   //S7按键长短按判断标志位（1-长按，0-断案）
  24          bit LED_enable;   //LED使能（0-使能 1-失能）
  25          void Sys_Init()
  26          {
  27   1        LED_Control(0X00);    //关闭所有LED
  28   1        RB_Control(0X00);   //关闭蜂鸣器继电器
  29   1      }
  30          
  31          void USE_PCF8591()
  32          {
  33   1        if(AD_Flag==1)    //50ms采集一次AD数据
  34   1        {
  35   2          AD_Flag=0;
  36   2          if(Serial_Num==1)
  37   2          {
  38   3            adc_value=ADC_Read('1')*(5.0/255);
  39   3          }
  40   2          else if(Serial_Num==3)
  41   2          {
  42   3            adc_value=ADC_Read('3')*(5.0/255);
  43   3          }
  44   2        }
  45   1      
  46   1        adc_IntValue=adc_value*100;
  47   1      }
  48          
  49          void USE_KEY()
  50          {
  51   1        KeyNum=KEY();
  52   1        if(KeyNum==4)   //S4-界面切换
C51 COMPILER V9.59.0.0   MAIN                                                              03/18/2023 19:05:42 PAGE 2   

  53   1        {
  54   2          Interface++;
  55   2          if(Interface==3){Interface=0;}
  56   2          if(Interface==2){Serial_Num=1;}   //从周期界面进入电压界面都显示通道1
  57   2        }
  58   1        if(KeyNum==5)   //S5-电压通道切换按键
  59   1        {
  60   2          if(Interface==2)    //在电压界面下
  61   2          {
  62   3            if(Serial_Num==1){Serial_Num=3;}
  63   3            else if(Serial_Num==3){Serial_Num=1;}
  64   3          }
  65   2        }
  66   1        if(KeyNum==6)   //S6-通道3电压缓存按键（任何界面下都有效）
  67   1        {
  68   2          if(Serial_Num==3)
  69   2          {
  70   3            Save_V=adc_value;   //保存通道3当前电压值
  71   3          }
  72   2        }
  73   1        if(KeyNum==7 && PressTime_flag==1)    //S7-频率缓存按键-长按键功能（任何界面下都有效）
  74   1        {
  75   2          Save_F=F;   //保存当前频率值
  76   2          LED_enable=~LED_enable;   //S7长按LED禁用与启用
  77   2          PressCount=0;   //清除按下按键时间计数值
  78   2          PressTime_flag=0;
  79   2        }
  80   1        if(KeyNum==7 && PressTime_flag==0)    //S7-频率缓存按键-短按键功能（任何界面下都有效）
  81   1        {
  82   2          Save_F=F;
  83   2          PressCount=0;   //清除按下按键时间计数值
  84   2        }
  85   1      }
  86          
  87          void USE_SMG()
  88          {
  89   1        if(Interface==0)    //频率显示界面
  90   1        {
  91   2          Nixie_SetBuf(0,Nodot_SMG[15]);    //标识-F
  92   2          if(F>999999){Nixie_SetBuf(1,Nodot_SMG[F/1000000]);}
  93   2          else{Nixie_SetBuf(1,0XFF);}
  94   2          
  95   2          if(F>99999){Nixie_SetBuf(2,Nodot_SMG[F/100000%10]);}
  96   2          else{Nixie_SetBuf(2,0XFF);}
  97   2          
  98   2          if(F>9999){Nixie_SetBuf(3,Nodot_SMG[F/10000%10]);}
  99   2          else{Nixie_SetBuf(3,0XFF);}
 100   2          
 101   2          if(F>999){Nixie_SetBuf(4,Nodot_SMG[F/1000%10]);}
 102   2          else{Nixie_SetBuf(4,0XFF);}
 103   2          
 104   2          if(F>99){Nixie_SetBuf(5,Nodot_SMG[F/100%10]);}
 105   2          else{Nixie_SetBuf(5,0XFF);}
 106   2          
 107   2          if(F>9){Nixie_SetBuf(6,Nodot_SMG[F/10%10]);}
 108   2          else{Nixie_SetBuf(6,0XFF);}
 109   2          
 110   2          Nixie_SetBuf(7,Nodot_SMG[F%10]);
 111   2        }
 112   1        else if(Interface==1)   //周期显示界面
 113   1        {
 114   2          Nixie_SetBuf(0,0XC8);   //标识-倒过来的U
C51 COMPILER V9.59.0.0   MAIN                                                              03/18/2023 19:05:42 PAGE 3   

 115   2          if(T>999999){Nixie_SetBuf(1,Nodot_SMG[T/1000000]);}
 116   2          else{Nixie_SetBuf(1,0XFF);}
 117   2          
 118   2          if(T>99999){Nixie_SetBuf(2,Nodot_SMG[T/100000%10]);}
 119   2          else{Nixie_SetBuf(2,0XFF);}
 120   2          
 121   2          if(T>9999){Nixie_SetBuf(3,Nodot_SMG[T/10000%10]);}
 122   2          else{Nixie_SetBuf(3,0XFF);}
 123   2          
 124   2          if(T>999){Nixie_SetBuf(4,Nodot_SMG[T/1000%10]);}
 125   2          else{Nixie_SetBuf(4,0XFF);}
 126   2          
 127   2          if(T>99){Nixie_SetBuf(5,Nodot_SMG[T/100%10]);}
 128   2          else{Nixie_SetBuf(5,0XFF);}
 129   2          
 130   2          if(T>9){Nixie_SetBuf(6,Nodot_SMG[T/10%10]);}
 131   2          else{Nixie_SetBuf(6,0XFF);}
 132   2          
 133   2          Nixie_SetBuf(7,Nodot_SMG[T%10]);
 134   2        }
 135   1        else if(Interface==2)   //电压显示界面
 136   1        {
 137   2          Nixie_SetBuf(0,0XC1);   //标识-U
 138   2          Nixie_SetBuf(1,0XBF);   //标识- -
 139   2          Nixie_SetBuf(2,Nodot_SMG[Serial_Num]);
 140   2          Nixie_SetBuf(3,0XFF);
 141   2          Nixie_SetBuf(4,0XFF);
 142   2          Nixie_SetBuf(5,dot_SMG[adc_IntValue/100]);
 143   2          Nixie_SetBuf(6,Nodot_SMG[adc_IntValue/10%10]);
 144   2          Nixie_SetBuf(7,Nodot_SMG[adc_IntValue%10]);
 145   2        }
 146   1      
 147   1      }
 148          
 149          void USE_LED()
 150          {
 151   1        if(LED_enable==0)
 152   1        {
 153   2          LED_Init();
 154   2          if(Serial_Num==3 && adc_value>Save_V){L1=0;}    //通道3当前电压值超过保存的电压值
 155   2          else{L1=1;}
 156   2          if(F>Save_F){L2=0;}   //当前频率值超过保存的频率值
 157   2          else{L2=1;}
 158   2            
 159   2          if(Interface==0){L3=0;L4=1;L5=1;}   //频率界面下
 160   2          if(Interface==1){L4=0;L3=1;L5=1;}   //周期界面下
 161   2          if(Interface==2){L5=0;L4=1;L3=1;}   //电压界面下
 162   2          P2&=0X1F;   //锁存
 163   2        }
 164   1        else if(LED_enable==1)
 165   1        {
 166   2          LED_Control(0X00);    //关闭所有LED
 167   2        }
 168   1      }
 169          /*外部触发中断函数*/
 170          void Timer0_Routine() interrupt 1
 171          {
 172   1        F_temp++; //外部接收一个脉冲就会溢出触发中断
 173   1      }
 174          
 175          /*1ms的定时中断函数*/
 176          void Timer1_Routine() interrupt 3
C51 COMPILER V9.59.0.0   MAIN                                                              03/18/2023 19:05:42 PAGE 4   

 177          {
 178   1        static uc T1_Count0;    //数码管扫描时间计数
 179   1        static uc T1_Count1;    //按键消抖时间计数
 180   1        static uc AD_Count;   //AD采集时间计数
 181   1        static ui F_Count;    //（NE555）频率采集时间计数
 182   1        T1_Count0++;T1_Count1++;
 183   1        if(T1_Count0==2)
 184   1        {
 185   2          T1_Count0=0;
 186   2          Nixie_Loop();
 187   2        }
 188   1        if(T1_Count1==10)
 189   1        {
 190   2          T1_Count1=0;
 191   2          KEY_Loop();
 192   2        }
 193   1        
 194   1        AD_Count++;
 195   1        if(AD_Count==50)    //50ms采集一次AD数据
 196   1        {
 197   2          AD_Count=0;
 198   2          AD_Flag=1;
 199   2        }
 200   1        
 201   1        F_Count++;
 202   1        if(F_Count==1000)   //达到1s
 203   1        {
 204   2          F=F_temp;
 205   2          T=1000000/F;    //(1000000单位为us。因为T的单位为us)
 206   2          F_temp=0;
 207   2          F_Count=0;
 208   2        }
 209   1      
 210   1      }
 211          /*1ms的定时中断函数*/
 212          void Timer2_Routine() interrupt 12
 213          {
 214   1        PressCount++;
 215   1        if(PressCount>1000){PressTime_flag=1;AUXR&=~0x10;}    //关闭T2定时器必须要对但单独位进行与操作直接AUXR|=0X0
             -0;会出现问题且影响其他定时器
 216   1      }
 217          
 218          void main(void)
 219          {
 220   1        Sys_Init();
 221   1        Timer0Init();
 222   1        Timer1Init();
 223   1        Timer2Init();
 224   1        while(1)
 225   1        {
 226   2          EA=0;   
 227   2          USE_LED();
 228   2          EA=1;
 229   2          USE_KEY();
 230   2          USE_SMG();
 231   2          USE_PCF8591();
 232   2        }
 233   1      }
 234          /*为了防止中断干扰LED的显示，所以在调用LED函数的时候关闭中断*/
 235          
 236          /*以下程序测试S7按键按下时间*/
 237          //    Nixie_SetBuf(0,Nodot_SMG[PressCount/1000]);
C51 COMPILER V9.59.0.0   MAIN                                                              03/18/2023 19:05:42 PAGE 5   

 238          //    Nixie_SetBuf(1,Nodot_SMG[PressCount/100%10]);
 239          //    Nixie_SetBuf(2,Nodot_SMG[PressCount/10%10]);
 240          //    Nixie_SetBuf(3,Nodot_SMG[PressCount%10]);


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1682    ----
   CONSTANT SIZE    =     32    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     34    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      3    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
