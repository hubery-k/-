C51 COMPILER V9.59.0.0   MAIN                                                              03/21/2023 20:13:16 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\KEIL\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main.ls
                    -t) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "LED.h"
   2          #include "RB.h"
   3          #include "Nixie.h"
   4          #include "DS18B20.h"
   5          #include "KEY.h"
   6          #include "Delay.h"
   7          #include "Timer.h"
   8          
   9          unsigned char code Nodot_SMG[]={0xC0,0xF9,0xA4,0xB0,0x99,0x92,0x82,0xF8,0x80,0x90};
  10          unsigned char code dot_SMG[]={0x40,0x79,0x24,0x30,0x19,0x12,0x02,0x78,0x00,0x10};
  11          
  12          unsigned char KeyNum;
  13          unsigned char PWM_workMode=1;   //默认工作状态为1
  14          unsigned char T_workMode=4;
  15          unsigned char Work_Time;    //默认工作时间为0
  16          unsigned char workTime_flag;
  17          unsigned char T;
  18          unsigned char Compare;
  19          unsigned int Time_Count;
  20          unsigned char PWM_Count;
  21          bit Interface;    //显示界面（0-PWM界面，1-温度界面）
  22          sbit Input=P3^4;
  23          bit T_flag;
  24          
  25          void Sys_Init(void)
  26          {
  27   1        LED_Control(0X00);
  28   1        RB_Control(0X00);
  29   1        P2&=0X1F;   //锁存
  30   1      }
  31          
  32          void USE_DS18B20(void)
  33          {
  34   1        if(T_flag==1)
  35   1        {
  36   2          T_flag=0;
  37   2          DS18B20_ConvertT();
  38   2          T=DS18B20_ReadT();    //转换为整形数据
  39   2        }
  40   1      
  41   1      }
  42          
  43          void USE_KEY(void)
  44          {
  45   1        KeyNum=KEY();
  46   1        if(KeyNum==4)   //S4-模式切换按键
  47   1        {
  48   2          PWM_workMode++;
  49   2          if(PWM_workMode==4){PWM_workMode=1;}
  50   2        }
  51   1        if(KeyNum==5)   //S5-定时时间按键
  52   1        {
  53   2          Work_Time+=60;
  54   2          workTime_flag++;
C51 COMPILER V9.59.0.0   MAIN                                                              03/21/2023 20:13:16 PAGE 2   

  55   2          if(workTime_flag==3){Work_Time=0;workTime_flag=0;}
  56   2        }
  57   1        if(KeyNum==6)   //S6-停止按键
  58   1        {
  59   2          Work_Time=0;
  60   2        }
  61   1        if(KeyNum==7)   //S7-界面切换按键
  62   1        {
  63   2          Interface=~Interface;
  64   2        }
  65   1      }
  66          
  67          void USE_SMG(void)
  68          {
  69   1        if(Interface==0)
  70   1        {
  71   2          Nixie_SetBuf(0,0XBF);
  72   2          Nixie_SetBuf(1,Nodot_SMG[PWM_workMode]);
  73   2          Nixie_SetBuf(2,0XBF);
  74   2          Nixie_SetBuf(3,0XFF);
  75   2          Nixie_SetBuf(4,Nodot_SMG[0]);
  76   2          Nixie_SetBuf(5,Nodot_SMG[Work_Time/100]);
  77   2          Nixie_SetBuf(6,Nodot_SMG[(Work_Time/10)%10]);
  78   2          Nixie_SetBuf(7,Nodot_SMG[Work_Time%10]);
  79   2        }
  80   1        else if(Interface==1)
  81   1        {
  82   2          Nixie_SetBuf(0,0XBF);
  83   2          Nixie_SetBuf(1,Nodot_SMG[T_workMode]);
  84   2          Nixie_SetBuf(2,0XBF);
  85   2          Nixie_SetBuf(3,0XFF);
  86   2          Nixie_SetBuf(4,0XFF);
  87   2          Nixie_SetBuf(5,Nodot_SMG[T/10]);
  88   2          Nixie_SetBuf(6,Nodot_SMG[T%10]);
  89   2          Nixie_SetBuf(7,0XC6);
  90   2        }
  91   1      }
  92          
  93          void USE_LED(void)
  94          {
  95   1        if(PWM_workMode==1&&Work_Time!=0){LED_Control(0X01);}
  96   1        else if(PWM_workMode==2&&Work_Time!=0){LED_Control(0X02);}
  97   1        else if(PWM_workMode==3&&Work_Time!=0){LED_Control(0X04);}
  98   1        else{LED_Control(0X00);}
  99   1      }
 100          void USE_PWM(void)
 101          {
 102   1        if(PWM_workMode==1){Compare=2;}
 103   1        else if(PWM_workMode==2){Compare=3;}
 104   1        else if(PWM_workMode==3){Compare=7;}
 105   1      }
 106          
 107          /*100us的定时中断函数*/
 108          void Timer0_Routine(void) interrupt 1
 109          {
 110   1        if(Work_Time!=0)
 111   1        {
 112   2          Time_Count++;
 113   2          if(Time_Count==10000)   //达到1s
 114   2          {
 115   3            Work_Time--;
 116   3            Time_Count=0;
C51 COMPILER V9.59.0.0   MAIN                                                              03/21/2023 20:13:16 PAGE 3   

 117   3          }
 118   2        }
 119   1        PWM_Count++;
 120   1        if(PWM_Count<Compare)   //周期为1ms
 121   1        {
 122   2          Input=1;
 123   2        }
 124   1        else
 125   1        {
 126   2          Input=0;
 127   2        }
 128   1        PWM_Count%=10;
 129   1      }
 130          
 131          void Timer1_Routine(void) interrupt 3
 132          {
 133   1        static unsigned char T1_Count1;
 134   1        static unsigned char T1_Count2;
 135   1        static unsigned char T_Count;
 136   1        T1_Count1++;T1_Count2++;
 137   1        if(T1_Count1==2)
 138   1        {
 139   2          T1_Count1=0;
 140   2          Nixie_Loop();
 141   2        }
 142   1        if(T1_Count2==10)
 143   1        {
 144   2          T1_Count2=0;
 145   2          KEY_Loop();
 146   2        }
 147   1        
 148   1        T_Count++;
 149   1        if(T_Count==100)    //100ms采集温度一次
 150   1        {
 151   2          T_Count=0;
 152   2          T_flag=1;
 153   2        }
 154   1      }
 155          
 156          void main(void)
 157          {
 158   1        Sys_Init();
 159   1        Timer0Init();
 160   1        Timer1Init();
 161   1        DS18B20_ConvertT();   //初始化时转换一次温度，防止上电读取温度数据出错
 162   1        Delay1000ms();
 163   1        while(1)
 164   1        {
 165   2          EA=0;
 166   2          USE_LED();
 167   2          EA=1;
 168   2          USE_DS18B20();
 169   2          USE_KEY();
 170   2          USE_SMG();
 171   2          USE_PWM();
 172   2        }
 173   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    586    ----
   CONSTANT SIZE    =     20    ----
C51 COMPILER V9.59.0.0   MAIN                                                              03/21/2023 20:13:16 PAGE 4   

   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     13    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
