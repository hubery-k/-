C51 COMPILER V9.59.0.0   MAIN                                                              03/18/2023 00:03:32 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\KEIL\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main.ls
                    -t) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "LED.h"
   2          #include "RB.h"
   3          #include "Nixie.h"
   4          #include "Timer.h"
   5          #include "KEY.h"
   6          #include "AT24C02.h"
   7          #include "PCF8591.h"
   8          #include "Delay.h"
   9          uc code Nodot_SMG[]={~0x3F,~0x06,~0x5B,~0x4F,~0x66,~0x6D,~0x7D,~0x07,~0x7F,~0x6F,~0x77,~0x7C,~0x39,~0x5E,~
             -0x79,~0x71};
  10          uc code dot_SMG[]={~0xbf,~0x86,~0xdb,~0xcf,~0xe6,~0xed,~0xfd,~0x87,~0xff,~0xef,~0xf7,~0xfc,~0xb9,~0xde,~0x
             -f9,~0xf1};
  11          
  12          uc KeyNum;    //按键键值
  13          uc Interface;   //显示界面变量
  14          f adc_v;    //采集到的电压值
  15          ui SMG_v;   //用来在数码管上显示（电压值*100）
  16          f V_parameter=3.0;    //电压参数
  17          uli Num;    //计数值
  18          ui T1_Count0;   //定时器1计数变量（用于L1）
  19          uc faults;    //用来计无效按键次数
  20          bit AD_flag;    //AD采集数据标志位
  21          bit L1_flag;    //LED1标志位
  22          bit Save_flag;    //AT24C02保存电压参数标志位
  23          uc State;
  24          
  25          /*系统初始化函数*/
  26          void Sys_Init()
  27          {
  28   1        LED_Control(0X00);    //关闭LED
  29   1        RB_Control(0X00);   //关闭蜂鸣器、继电器
  30   1      }
  31          
  32          /*PCF8591应用函数-主要用于AD数据采集*/
  33          void USE_PCF8591()
  34          {
  35   1        /*AD数据采集与转换*/
  36   1        if(AD_flag==1)
  37   1        {
  38   2          AD_flag=0;
  39   2          adc_v=AD_Read()*(5.0/255);
  40   2        }
  41   1        SMG_v=adc_v*100;
  42   1        
  43   1        /*L1点亮与熄灭*/
  44   1        if(adc_v<V_parameter){TR1=1;}
  45   1        else if(adc_v>=V_parameter){TR1=0;L1_flag=0;T1_Count0=0;}
  46   1        
  47   1        /*Num计数触发*/
  48   1        switch(State)
  49   1        {
  50   2          case 0:if(adc_v>V_parameter){State=1;} break;
  51   2          case 1:if(adc_v<V_parameter){State=0;Num++;} break;
  52   2        }
C51 COMPILER V9.59.0.0   MAIN                                                              03/18/2023 00:03:32 PAGE 2   

  53   1      }
  54          
  55          /*AT24C02应用函数-用于保存电压参数（掉电不丢失）*/
  56          void USE_AT24C02()
  57          {
  58   1        if(Save_flag==1)
  59   1        {
  60   2          Save_flag=0;
  61   2          EEPROM_Write(0X00,V_parameter*10);
  62   2          Delay5ms();   //写入最大需要5ms
  63   2        }
  64   1      }
  65          
  66          /*LED应用函数*/
  67          void USE_LED()
  68          {
  69   1        LED_Init();
  70   1        if(L1_flag==1){L1=0;}
  71   1        else{L1=1;}
  72   1        
  73   1        if(Num%2!=0){L2=0;}
  74   1        else{L2=1;}
  75   1        
  76   1        if(faults>=3){L3=0;}
  77   1        else{L3=1;}
  78   1        
  79   1        P2&=0X1F;   //锁存
  80   1      }
  81          
  82          /*按键应用函数*/
  83          void USE_KEY()
  84          {
  85   1        KeyNum=KEY_Matrix();
  86   1        
  87   1        /*有效操作*/
  88   1        if(KeyNum==12)    //S12-显示界面切换按键
  89   1        {
  90   2          Interface++;
  91   2          if(Interface==3){Interface=0;}
  92   2          if(Interface==2){Save_flag=1;}    //从参数界面退出，电压参数*10倍保存
  93   2          faults=0;
  94   2        }
  95   1        if(Interface==2)    //在计数界面下清零有效
  96   1        {
  97   2          if(KeyNum==13)    //S13-计数清零按键
  98   2          {
  99   3            Num=0;
 100   3            faults=0;
 101   3          }
 102   2        }
 103   1        if(Interface==1)    //在参数设置界面下S16和S17有效
 104   1        {
 105   2          if(KeyNum==16)    //S16-电压参数加按键（每次增加0.5V）
 106   2          {
 107   3            V_parameter+=0.5;
 108   3            if(V_parameter>5.0){V_parameter=0;}
 109   3            faults=0;
 110   3          } 
 111   2          if(KeyNum==17)    //S17-电压参数减按键（每次减小0.5V）
 112   2          {
 113   3            V_parameter-=0.5;
 114   3            if(V_parameter<0){V_parameter=5.0;}
C51 COMPILER V9.59.0.0   MAIN                                                              03/18/2023 00:03:32 PAGE 3   

 115   3            faults=0;
 116   3          }
 117   2        }
 118   1        
 119   1        /*误操作*/
 120   1        if(Interface!=1)
 121   1        {
 122   2          if(KeyNum==16||KeyNum==17){faults+=1;}
 123   2        }
 124   1        if(Interface!=2)
 125   1        {
 126   2          if(KeyNum==13){faults+=1;}
 127   2        }
 128   1      }
 129          
 130          void USE_SMG()
 131          {
 132   1        if(Interface==0)
 133   1        {
 134   2          Nixie_SetBuf(0,0XC1);   //标识符-U
 135   2          Nixie_SetBuf(1,0XFF);
 136   2          Nixie_SetBuf(2,0XFF);
 137   2          Nixie_SetBuf(3,0XFF);
 138   2          Nixie_SetBuf(4,0XFF);
 139   2          Nixie_SetBuf(5,dot_SMG[SMG_v/100]);
 140   2          Nixie_SetBuf(6,Nodot_SMG[SMG_v/10%10]);
 141   2          Nixie_SetBuf(7,Nodot_SMG[SMG_v%10]);
 142   2        }
 143   1        else if(Interface==1)
 144   1        {
 145   2          Nixie_SetBuf(0,0X8C);   //标识符-P
 146   2          Nixie_SetBuf(1,0XFF);
 147   2          Nixie_SetBuf(2,0XFF);
 148   2          Nixie_SetBuf(3,0XFF);
 149   2          Nixie_SetBuf(4,0XFF);
 150   2          Nixie_SetBuf(5,dot_SMG[(ui)(V_parameter*100)/100]);
 151   2          Nixie_SetBuf(6,Nodot_SMG[(ui)(V_parameter*100)/10%10]);
 152   2          Nixie_SetBuf(7,Nodot_SMG[(ui)(V_parameter*100)%10]);
 153   2        }
 154   1        else if(Interface==2)
 155   1        {
 156   2          Nixie_SetBuf(0,0X89);   //标识符-N（显示不了N只能显示H）
 157   2          if(Num>999999){Nixie_SetBuf(1,Nodot_SMG[Num/1000000]);}
 158   2          else{Nixie_SetBuf(1,0XFF);}
 159   2          
 160   2          if(Num>99999){Nixie_SetBuf(2,Nodot_SMG[Num/100000%10]);}
 161   2          else{Nixie_SetBuf(2,0XFF);}
 162   2          
 163   2          if(Num>9999){Nixie_SetBuf(3,Nodot_SMG[Num/10000%10]);}
 164   2          else{Nixie_SetBuf(3,0XFF);}
 165   2          
 166   2          if(Num>999){Nixie_SetBuf(4,Nodot_SMG[Num/1000%10]);}
 167   2          else{Nixie_SetBuf(4,0XFF);}
 168   2          
 169   2          if(Num>99){Nixie_SetBuf(5,Nodot_SMG[Num/100%10]);}
 170   2          else{Nixie_SetBuf(5,0XFF);}
 171   2          
 172   2          if(Num>9){Nixie_SetBuf(6,Nodot_SMG[Num/10%10]);}
 173   2          else{Nixie_SetBuf(6,0XFF);}
 174   2      
 175   2          Nixie_SetBuf(7,Nodot_SMG[Num%10]);
 176   2        }
C51 COMPILER V9.59.0.0   MAIN                                                              03/18/2023 00:03:32 PAGE 4   

 177   1      }
 178          
 179          
 180          void Timer0_Routine(void) interrupt 1
 181          {
 182   1        static uc T0_Count0;
 183   1        static uc T0_Count1;
 184   1        static uc AD_Count;
 185   1        
 186   1        T0_Count0++;T0_Count1++;
 187   1        if(T0_Count0==2)
 188   1        {
 189   2          T0_Count0=0;
 190   2          Nixie_Loop();
 191   2        }
 192   1        if(T0_Count1==20)
 193   1        {
 194   2          T0_Count1=0;
 195   2          KEY_Loop();
 196   2        }
 197   1        
 198   1        AD_Count++;
 199   1        if(AD_Count==50)
 200   1        {
 201   2          AD_flag=1;
 202   2        }
 203   1      }
 204          
 205          void Timer1_Routine(void) interrupt 3
 206          {
 207   1        T1_Count0++;
 208   1        if(T1_Count0>5000)    //大于5s
 209   1        {
 210   2          T1_Count0=0;
 211   2          L1_flag=1;
 212   2          TR1=0;    //停止定时
 213   2        }
 214   1      }
 215          
 216          void main()
 217          {
 218   1        Sys_Init();
 219   1        Timer0Init();
 220   1        Timer1Init();
 221   1        V_parameter=EEPROM_Read(0X00)/10.0; //除以10的时候必须要加上.0
 222   1        while(1)
 223   1        {
 224   2          EA=0;
 225   2          USE_LED();
 226   2          EA=1;
 227   2          USE_AT24C02();
 228   2          USE_PCF8591();
 229   2          USE_KEY();
 230   2          USE_SMG();
 231   2        }
 232   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1514    ----
   CONSTANT SIZE    =     32    ----
   XDATA SIZE       =   ----    ----
C51 COMPILER V9.59.0.0   MAIN                                                              03/18/2023 00:03:32 PAGE 5   

   PDATA SIZE       =   ----    ----
   DATA SIZE        =     23    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      3    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
