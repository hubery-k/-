C51 COMPILER V9.59.0.0   MAIN                                                              03/23/2023 17:00:52 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\KEIL\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main.ls
                    -t) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "LED.h"
   2          #include "RB.h"
   3          #include "Timer.h"
   4          #include "NIXIE.h"
   5          #include "KEY.h"
   6          #include "Delay.h"
   7          #include "DS18B20.h"
   8          #include "DA.h"
   9          unsigned char code Nodot_SMG[]={~0x3F,~0x06,~0x5B,~0x4F,~0x66,~0x6D,~0x7D,~0x07,~0x7F,~0x6F,~0x77,~0x7C,~0
             -x39,~0x5E,~0x79,~0x71};
  10          unsigned char code dot_SMG[]={~0xBF,~0x86,~0xDB,~0xCF,~0xE6,~0xED,~0xFD,~0x87,~0xFF,~0xEF,~0xF7,~0xFC,~0xB
             -9,~0xDE,~0xF9,~0xF1};
  11          
  12          unsigned char Interface;
  13          float T;
  14          unsigned char T_Int;  //温度整数数据
  15          unsigned char T_De;   //温度小数数据
  16          float T_temp;   //温度临时变量
  17          unsigned char KeyNum;
  18          signed char T_parameter=25;   //温度参数初始值25（自定义范围：0~50）
  19          unsigned int DAC_V;
  20          bit Mode;
  21          bit DS18B20_Flag;
  22          void Sys_Init()
  23          {
  24   1        LED_Control(0X00);  //关闭LED
  25   1        RB_Control(0X00);   //关闭蜂鸣器继电器
  26   1      }
  27          
  28          void USE_DS18B20(void)
  29          {
  30   1        if(DS18B20_Flag==1)
  31   1        {
  32   2          DS18B20_Flag=0;
  33   2          DS18B20_ConvertT();
  34   2          T=DS18B20_ReadT();
  35   2          T_Int=DS18B20_ReadT();
  36   2          T_De=(unsigned char)(DS18B20_ReadT()*100)%100;    //取出后两位温度数据
  37   2        }
  38   1      }
  39          
  40          void USE_DAC(void)
  41          {
  42   1        if(Mode==0)   //模式1
  43   1        {
  44   2          if(T<T_parameter){DAC_Write(0);DAC_V=0;}
  45   2          else{DAC_Write(255);DAC_V=500;}
  46   2          
  47   2        }
  48   1        else if(Mode==1)    //模式2（根据y=kx -> k=3V/20°C 说明升高1°电压升高0.15V
  49   1        {
  50   2          if(T<40){DAC_Write((1.0/5.0)*255);DAC_V=100;}   //输出1.0V
  51   2          if(T>40){DAC_Write((4.0/5.0)*255);DAC_V=400;}   //输出4.0V
  52   2          if(T>=20&&T<=40)    //升高1°电压上升0.15V
C51 COMPILER V9.59.0.0   MAIN                                                              03/23/2023 17:00:52 PAGE 2   

  53   2          {
  54   3            T_temp=T-20;
  55   3            DAC_V=100+(T_temp*0.15)*100;
  56   3            DAC_Write((DAC_V/100.0/5)*255);
  57   3          }   
  58   2        }
  59   1      }
  60          
  61          /*1ms的定时中断函数*/
  62          void Timer0_Routine() interrupt 1
  63          {
  64   1        static unsigned char T0Count1;
  65   1        static unsigned char T0Count2;
  66   1        static unsigned char T_Count;
  67   1        
  68   1        T0Count1++;T0Count2++;
  69   1        if(T0Count1==2)
  70   1        {
  71   2          T0Count1=0;
  72   2          Nixie_Loop();
  73   2        }
  74   1        if(T0Count2==10)
  75   1        {
  76   2          T0Count2=0;
  77   2          KEY_Loop();
  78   2        }
  79   1        T_Count++;
  80   1        if(T_Count==100)    //100ms读取一次温度数据
  81   1        {
  82   2          T_Count=0;
  83   2          DS18B20_Flag=1;
  84   2        }
  85   1        
  86   1        
  87   1      }
  88          
  89          void USE_KEY()
  90          {
  91   1        KeyNum=KEY();
  92   1        if(KeyNum==4)   //S4-界面按键
  93   1        {
  94   2          Interface++;
  95   2          if(Interface==3){Interface=0;}
  96   2        }
  97   1        if(Interface==1)    //参数设置界面下
  98   1        {
  99   2          if(KeyNum==8)   //S8-参数界面下减按键，温度参数减1
 100   2          {
 101   3            T_parameter-=1;
 102   3            if(T_parameter<0){T_parameter=50;}
 103   3          }
 104   2          if(KeyNum==9)   //S9-参数界面下加按键，温度参数加1
 105   2          {
 106   3            T_parameter+=1;
 107   3            if(T_parameter>50){T_parameter=0;}
 108   3          }
 109   2        }
 110   1        if(KeyNum==5)   //S5-模式切换按键
 111   1        {
 112   2          Mode=~Mode;
 113   2        }
 114   1        
C51 COMPILER V9.59.0.0   MAIN                                                              03/23/2023 17:00:52 PAGE 3   

 115   1      }
 116          
 117          void USE_SMG()
 118          {
 119   1        if(Interface==0)    //温度显示界面
 120   1        {
 121   2          Nixie_SetBuf(0,Nodot_SMG[12]);    //标识-C
 122   2          Nixie_SetBuf(1,0XFF);
 123   2          Nixie_SetBuf(2,0XFF);
 124   2          Nixie_SetBuf(3,0XFF);
 125   2          Nixie_SetBuf(4,Nodot_SMG[T_Int/10]);
 126   2          Nixie_SetBuf(5,dot_SMG[T_Int%10]);
 127   2          Nixie_SetBuf(6,Nodot_SMG[T_De/10]);
 128   2          Nixie_SetBuf(7,Nodot_SMG[T_De%10]);
 129   2        }
 130   1        else if(Interface==1)   //参数设置界面
 131   1        {
 132   2          Nixie_SetBuf(0,0X8C);   //标识-P
 133   2          Nixie_SetBuf(1,0XFF);
 134   2          Nixie_SetBuf(2,0XFF);
 135   2          Nixie_SetBuf(3,0XFF);
 136   2          Nixie_SetBuf(4,0XFF);
 137   2          Nixie_SetBuf(5,0XFF);
 138   2          Nixie_SetBuf(6,Nodot_SMG[T_parameter/10]);
 139   2          Nixie_SetBuf(7,Nodot_SMG[T_parameter%10]);
 140   2        }
 141   1        else if(Interface==2)   //DAC输出界面
 142   1        {
 143   2          Nixie_SetBuf(0,Nodot_SMG[10]);    //标识-A
 144   2          Nixie_SetBuf(1,0XFF);
 145   2          Nixie_SetBuf(2,0XFF);
 146   2          Nixie_SetBuf(3,0XFF);
 147   2          Nixie_SetBuf(4,0XFF);
 148   2          
 149   2          Nixie_SetBuf(5,dot_SMG[DAC_V/100]);
 150   2          Nixie_SetBuf(6,Nodot_SMG[DAC_V/10%10]);
 151   2          Nixie_SetBuf(7,Nodot_SMG[DAC_V%10]);
 152   2        }
 153   1      }
 154          
 155          void USE_LED()
 156          {
 157   1        if(Mode==0&&Interface==0){LED_Control(0X03);}
 158   1        else if(Mode==0&&Interface==1){LED_Control(0X05);}
 159   1        else if(Mode==0&&Interface==2){LED_Control(0X09);}
 160   1        else{LED_Control(0X00);}
 161   1      }
 162          
 163          
 164          void main()
 165          {
 166   1        Sys_Init();
 167   1        DS18B20_ConvertT();
 168   1        Delay750ms();   //温度数据转换最高需要750ms时间
 169   1        Timer0Init();
 170   1        while(1)
 171   1        {
 172   2          EA=0; 
 173   2          USE_LED();
 174   2          EA=1;
 175   2          USE_DAC();
 176   2          USE_SMG();
C51 COMPILER V9.59.0.0   MAIN                                                              03/23/2023 17:00:52 PAGE 4   

 177   2          USE_DS18B20();
 178   2          USE_KEY();
 179   2        }
 180   1      }
 181          /*调用LED函数时关闭总中断，调用结束后打开是为了解决LED微微亮问题*/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    980    ----
   CONSTANT SIZE    =     32    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     18    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
