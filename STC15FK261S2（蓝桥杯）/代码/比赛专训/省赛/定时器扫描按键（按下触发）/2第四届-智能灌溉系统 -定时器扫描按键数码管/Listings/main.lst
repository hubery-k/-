C51 COMPILER V9.59.0.0   MAIN                                                              04/07/2023 22:11:45 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\KEIL\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main.ls
                    -t) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "LED.h"
   2          #include "RB.h"
   3          #include "Nixie.h"
   4          #include "AD.h"
   5          #include "Clock.h"
   6          #include "EEPROM.h"
   7          #include "KEY.h"
   8          #include "Timer.h"
   9          #include "Delay.h"
  10          
  11          /*本程序使用硬件：LED、蜂鸣器、继电器、数码管、AD(PCF8591)、EEPROM(AT24C02)、按键、DS1302时钟*/
  12          typedef unsigned int uint;
  13          typedef unsigned char uchar;
  14          
  15          uchar code Nodot_duanma[]={0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90,0x88,0x83,0xc6,0xa1,0x86,0x8e
             -};
  16          uchar code dot_duanma[]={0x40,0x79,0x24,0x30,0x19,0x12,0x02,0x78,0x00,0x10,0x08,0x03,0x46,0x21,0x06,0x0e};
  17          
  18          /*BCD码的好处在时间上对比16进制看起来很直观（8时30分0秒）*/
  19          /*设置时间的数组不能加上code放入ROM中，因为读取的时间是一直更改的。放入ROM(程序存储区)中的数据将不能被更改
             -*/
  20          uchar Time[]={0X00,0X30,0X08};
  21          
  22          
  23          
  24          uchar KeyNum;
  25          float adc_vol;
  26          uchar humidity;
  27          uchar Hum_Limit=50;//湿度阈值初始为50%
  28          uchar Red_HumLimit;
  29          uchar temp;
  30          
  31          bit Wor_State;
  32          bit Buz_State;
  33          bit Rel_State;
  34          bit S6_State;
  35          bit Buz_flag=1;   //蜂鸣器提醒功能（默认打开）
  36          bit L1_State;
  37          bit L2_State;
  38          
  39          bit AD_flag;
  40          bit C_flag;
  41          bit Save_flag;
  42          
  43          void Sys_Init(void)
  44          {
  45   1        LED_Control(0X00);    //关闭所有LED
  46   1        RB_Control(0X00);//关闭继电器蜂鸣器
  47   1        P2&=0X1F;//锁存
  48   1      }
  49          
  50          void USE_DS1302(void)
  51          {
  52   1        if(C_flag==1)
C51 COMPILER V9.59.0.0   MAIN                                                              04/07/2023 22:11:45 PAGE 2   

  53   1        {
  54   2          C_flag=0;
  55   2          Read_Time(Time);
  56   2        }
  57   1      }
  58          
  59          void USE_AD(void)
  60          {
  61   1        if(AD_flag==1)
  62   1        {
  63   2          AD_flag=0;
  64   2          adc_vol=AD_Read()*(5.0/255);//转换为0-5V电压值
  65   2          humidity=(adc_vol/5.0)*99;//转换为湿度值  （要将这句语句放入if中否则刷新太快出现问题）
  66   2        }
  67   1      }
  68          
  69          void USE_EEPROM(void)
  70          {
  71   1        if(Save_flag==1)
  72   1        {
  73   2          Save_flag=0;
  74   2          AT24C02_WriteByte(0X01,Hum_Limit);//写周期最长是5ms，所以每次写入都要加一个5ms的延时
  75   2          Delay5ms();
  76   2        }
  77   1      }
  78          
  79          void USE_KEY(void)
  80          {
  81   1        KeyNum=Key();
  82   1        
  83   1        if(KeyNum==7)//S7-系统工作状态切换按键(0-自动，1-手动)
  84   1        {
  85   2          Wor_State=~Wor_State;
  86   2        }
  87   1        
  88   1        /*S6、S5、S4手动工作状态下*/
  89   1        if(Wor_State==1)
  90   1        {
  91   2          if(KeyNum==6)//S6-关闭与打开蜂鸣器提醒功能(0-关闭，1-鸣响)
  92   2          {
  93   3            Buz_flag=~Buz_flag;
  94   3          }
  95   2          else if(KeyNum==5)//S5-打开灌溉系统
  96   2          {
  97   3            Rel_State=1;
  98   3          }
  99   2          else if(KeyNum==4)//S4-关闭灌溉系统
 100   2          {
 101   3            Rel_State=0;
 102   3          }
 103   2        }
 104   1        
 105   1        /*S6、S5、S4自动工作状态下*/
 106   1        else if(Wor_State==0)
 107   1        {
 108   2          if(KeyNum==6)//S6-湿度阈值调整（第一次按下进入湿度阈值调整界面，第二次按下保存新阈值到EEPROM中）
 109   2          {
 110   3            S6_State=~S6_State;   //(0-保存退回正常页面，1-湿度阈值调整页面)
 111   3            if(S6_State==0){Save_flag=1;}
 112   3          }
 113   2          else if(KeyNum==5)//S5-湿度阈值加1（在湿度阈值调整界面下有效）
 114   2          {
C51 COMPILER V9.59.0.0   MAIN                                                              04/07/2023 22:11:45 PAGE 3   

 115   3            if(S6_State==1){Hum_Limit++;}
 116   3          }
 117   2          else if(KeyNum==4)//S4-湿度阈值减1（在湿度阈值调整界面下有效）
 118   2          {
 119   3            if(S6_State==1){Hum_Limit--;}
 120   3          }
 121   2        }
 122   1      }
 123          
 124          void USE_SMG(void)
 125          {
 126   1        //初始显示状态
 127   1        if(S6_State==0)
 128   1        {
 129   2          Nixie_SetBuf(0,Nodot_duanma[Time[2]/16]);
 130   2          Nixie_SetBuf(1,Nodot_duanma[Time[2]%16]);
 131   2          Nixie_SetBuf(2,0xBF);
 132   2          Nixie_SetBuf(3,Nodot_duanma[Time[1]/16]);
 133   2          Nixie_SetBuf(4,Nodot_duanma[Time[1]%16]);
 134   2          Nixie_SetBuf(5,0xFF);
 135   2          Nixie_SetBuf(6,Nodot_duanma[humidity/10]);
 136   2          Nixie_SetBuf(7,Nodot_duanma[humidity%10]);
 137   2        }
 138   1        
 139   1        
 140   1        //湿度阈值调整界面（自动工作模式下）
 141   1        if(S6_State==1)
 142   1        {
 143   2          Nixie_SetBuf(0,0xBF);
 144   2          Nixie_SetBuf(1,0xBF);
 145   2          
 146   2          Nixie_SetBuf(2,0xFF);
 147   2          Nixie_SetBuf(3,0xFF);
 148   2          Nixie_SetBuf(4,0xFF);
 149   2          Nixie_SetBuf(5,0xFF);
 150   2      
 151   2          Nixie_SetBuf(6,Nodot_duanma[Hum_Limit/10]);
 152   2          Nixie_SetBuf(7,Nodot_duanma[Hum_Limit%10]);
 153   2        }
 154   1      }
 155          
 156          void Work_State(void)
 157          {
 158   1        //自动工作状态(系统上电默认自动工作状态)
 159   1        if(Wor_State==0)
 160   1        {
 161   2          L1_State=1;   //L1点亮
 162   2          L2_State=0;   //L2熄灭
 163   2          Buz_State=0;    //自动状态下关闭蜂鸣器
 164   2          if(humidity<Hum_Limit){Rel_State=1;}
 165   2          else{Rel_State=0;}
 166   2        }
 167   1        //手动工作状态
 168   1        else if(Wor_State==1)
 169   1        {
 170   2          L2_State=1;   //L2点亮
 171   2          L1_State=0;   //L1熄灭
 172   2          S6_State=0;   //手动状态下不显示阈值调整页面
 173   2          if(humidity<Hum_Limit&&Buz_flag==1){Buz_State=1;}
 174   2          else if(humidity>=Hum_Limit||Buz_flag==0){Buz_State=0;}
 175   2        }
 176   1      }
C51 COMPILER V9.59.0.0   MAIN                                                              04/07/2023 22:11:45 PAGE 4   

 177          
 178          
 179          void USE_LED(void)
 180          {
 181   1        LED_Init();
 182   1        
 183   1        if(L1_State==1){L1=0;}    //L1亮
 184   1        else{L1=1;}
 185   1        if(L2_State==1){L2=0;}    //L1灭
 186   1        else{L2=1;}
 187   1        
 188   1        P2&=0x1F;
 189   1      }
 190          
 191          void USE_RB(void)
 192          {
 193   1        RB_Init();
 194   1        
 195   1        if(Rel_State==1){Relay=1;}
 196   1        else{Relay=0;}
 197   1        if(Buz_State==1){Buzzer=1;}
 198   1        else{Buzzer=0;}
 199   1        
 200   1        P2&=0X1F;   //锁存  
 201   1      }
 202          
 203          /*1ms的定时中断函数*/
 204          void Timer1_Routine(void) interrupt 3
 205          {
 206   1        static unsigned char T1_Count1;
 207   1        static unsigned char T1_Count2;
 208   1        static unsigned char AD_Count;
 209   1        static unsigned char C_Count;
 210   1        
 211   1        T1_Count1++;T1_Count2++;
 212   1        if(T1_Count1==2)
 213   1        {
 214   2          T1_Count1=0;
 215   2          Nixie_Loop();
 216   2        }
 217   1        if(T1_Count2==10)
 218   1        {
 219   2          T1_Count2=0;
 220   2          Key_Loop();
 221   2        }
 222   1        
 223   1        AD_Count++;
 224   1        if(AD_Count==50)    //达到50ms采集AD数据一次
 225   1        {
 226   2          AD_Count=0;
 227   2          AD_flag=1;
 228   2        }
 229   1        
 230   1        C_Count++;
 231   1        if(C_Count==50)   //达到50ms采集时间数据一次
 232   1        {
 233   2          C_Count=0;
 234   2          C_flag=1;
 235   2        }
 236   1      }
 237          
 238          void main(void)
C51 COMPILER V9.59.0.0   MAIN                                                              04/07/2023 22:11:45 PAGE 5   

 239          {
 240   1        Sys_Init();
 241   1        Set_Time(Time);
 242   1        temp=AT24C02_Read(0X01);
 243   1        if(temp>0&&temp<100){Hum_Limit=temp;} //防止初次上电读取奇怪的值
 244   1        else{Hum_Limit=50;}
 245   1        Timer1Init();
 246   1        while(1)
 247   1        {
 248   2          EA=0;
 249   2          USE_RB();
 250   2          USE_LED();
 251   2          EA=1;
 252   2          USE_AD();
 253   2          USE_EEPROM();
 254   2          USE_DS1302();
 255   2          USE_KEY();
 256   2          USE_SMG();
 257   2          Work_State();
 258   2        }
 259   1      }
 260          
 261          
 262          /*出现的问题及解决方法：*/
 263          
 264          /*
 265            1. 在操作LED、继电器、蜂鸣器的时候，正好碰到定时器中断，导致P0口数据不稳定，导致LED、继电器、蜂鸣器异常。
 266            解决方法：运行到LED和继电器蜂鸣器的时候不打开中断。
 267          */
 268          
 269          /*
 270            2.中断会影响软件的模拟时序的数据传输。解决方法是在调用时序进行数据传输时将中断EA置0关闭，等待数据读取或写
             -入成功再置1代开总中断。
 271          最好的解决方法是：在中断中定义标志位，当达到一定时间后标志位置1，在主程序中做判断当标志位为1时读取数据。这
             -样可以省去Delay的过程还不会与中断冲突。
 272          */


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    704    ----
   CONSTANT SIZE    =     32    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     16    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =     10    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
