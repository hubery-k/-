C51 COMPILER V9.59.0.0   MAIN                                                              04/07/2023 23:53:08 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\KEIL\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main.ls
                    -t) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "LED.h"
   2          #include "RB.h"
   3          #include "Nixie.h"
   4          #include "Timer.h"
   5          #include "KEY.h"
   6          #include "DS18B20.h"
   7          #include "Delay.h"
   8          #include "Clock.h"
   9          
  10          uc code Nodot_SMG[]={~0x3F,~0x06,~0x5B,~0x4F,~0x66,~0x6D,~0x7D,~0x07,~0x7F,~0x6F,~0x77,~0x7C,~0x39,~0x5E,~
             -0x79,~0x71};
  11          uc code dot_SMG[]={~0xBF,~0x86,~0xDB,~0xCF,~0xE6,~0xED,~0xFD,~0x87,~0xFF,~0xEF,~0xF7,~0xFC,~0xB9,~0xDE,~0x
             -F9,~0xF1};
  12          uc Time[3]={0X50,0X59,0X23};  //23时59分30秒
  13          
  14          
  15          uc KeyNum;
  16          f T;
  17          uc T_Int; //温度整数
  18          uc T_De;  //温度小数（小数点后一位）
  19          uc T_parameter=23;    //温度参数（范围：10~99）
  20          uc Serial_Num=1;    //编号
  21          uc Interface;   //显示界面
  22          uc Count;
  23          
  24          
  25          bit T_flag;   //温度采集标志
  26          bit C_flag;   //时间采集标志
  27          bit Mode;
  28          bit L3_flag;
  29          bit L1_State;
  30          bit L2_State;
  31          bit L3_State;
  32          bit RB_flag;
  33          bit RB_State;
  34          bit Time_flag;
  35          
  36          void Sys_Init()
  37          {
  38   1        LED_Control(0X00);
  39   1        RB_Control(0X00);
  40   1      }
  41          
  42          void USE_DS18B20()
  43          {
  44   1        if(T_flag==1)
  45   1        {
  46   2          T_flag=0;
  47   2          DS18B20_ConvertT();
  48   2          T=DS18B20_ReadT();
  49   2          T_Int=T;
  50   2          T_De=(uc)(T*10)%10;
  51   2        }
  52   1        
C51 COMPILER V9.59.0.0   MAIN                                                              04/07/2023 23:53:08 PAGE 2   

  53   1        if(Mode==0)   //温度控制模式下
  54   1        {
  55   2          L2_State=1;
  56   2          if(T>(f)T_parameter){RB_State=1;}//开继电器
  57   2          else{RB_State=0;}   //关继电器
  58   2        }
  59   1        
  60   1      }
  61          
  62          void USE_DS1302()
  63          {
  64   1        if(C_flag==1)
  65   1        {
  66   2          C_flag=0;
  67   2          Read_Time(Time);
  68   2          if(Mode==1)   //时间模式下
  69   2          {
  70   3            L2_State=0;
  71   3            
  72   3            if(Time[0]==0X00 && Time[1]==0X00)  //达到整点
  73   3            {
  74   4              RB_State=1;   //开继电器
  75   4              L1_State=1;   //开L1
  76   4            }
  77   3          }
  78   2        }
  79   1      }
  80          
  81          void USE_LED()
  82          {
  83   1        LED_Init();
  84   1        
  85   1        if(L1_State==1){L1=0;}
  86   1        else if(L1_State==0){L1=1;}
  87   1        
  88   1        if(L2_State==1){L2=0;}    //温度控制模式下亮
  89   1        else if(L2_State==0){L2=1;}
  90   1        
  91   1        if(L3_State==1){L3=0;}
  92   1        else if(L3_State==0){L3=1;}
  93   1        
  94   1        P2&=0X1F;
  95   1      }
  96          
  97          void USE_RB()
  98          {
  99   1        RB_Init();
 100   1        if(RB_State==1){Relay=1;;RB_flag=1;}
 101   1        else if(RB_State==0){Relay=0;RB_flag=0;}
 102   1        
 103   1        
 104   1        if(RB_flag==1){L3_flag=1;}
 105   1        else{L3_flag=0;L3_State=0;}
 106   1        
 107   1        P2&=0X1F;
 108   1      }
 109          
 110          void USE_KEY()
 111          {
 112   1        KeyNum=Key_Matrix();
 113   1        if(KeyNum==12)    //S12-界面切换
 114   1        {
C51 COMPILER V9.59.0.0   MAIN                                                              04/07/2023 23:53:08 PAGE 3   

 115   2          Interface++;
 116   2          if(Interface==3){Interface=0;}
 117   2          
 118   2          if(Interface==0){Serial_Num=1;}
 119   2          if(Interface==1){Serial_Num=2;}
 120   2          if(Interface==2){Serial_Num=3;}
 121   2        }
 122   1        
 123   1        if(KeyNum==13)    //S13-模式切换
 124   1        {
 125   2          Mode=~Mode;
 126   2        }
 127   1        
 128   1        if(Interface==2)    //参数设置界面下
 129   1        {
 130   2          if(KeyNum==16)    //S16-加（温度参数）
 131   2          {
 132   3            T_parameter+=1;
 133   3            if(T_parameter>99){T_parameter=10;}
 134   3          }
 135   2          if(KeyNum==17)    //S17-减（温度参数）
 136   2          {
 137   3            T_parameter-=1;
 138   3            if(T_parameter<10){T_parameter=99;}
 139   3          }
 140   2        }
 141   1        
 142   1      //  if((Cont&0X14)&&Interface==1){Time_flag=1;}   //时间显示界面下
 143   1      //  else if(Cont==0&&Interface==1){Time_flag=0;}
 144   1      }
 145          
 146          void USE_SMG()
 147          {
 148   1        if(Interface==0)
 149   1        {
 150   2          Nixie_SetBuf(0,0XC1);
 151   2          Nixie_SetBuf(1,Nodot_SMG[Serial_Num]);
 152   2          Nixie_SetBuf(2,0XFF);
 153   2          Nixie_SetBuf(3,0XFF);
 154   2          Nixie_SetBuf(4,0XFF);
 155   2          Nixie_SetBuf(5,Nodot_SMG[T_Int/10]);
 156   2          Nixie_SetBuf(6,dot_SMG[T_Int%10]);
 157   2          Nixie_SetBuf(7,Nodot_SMG[T_De]);
 158   2      
 159   2        }
 160   1        else if(Interface==1)
 161   1        {
 162   2          Nixie_SetBuf(0,0XC1);
 163   2          Nixie_SetBuf(1,Nodot_SMG[Serial_Num]);
 164   2          Nixie_SetBuf(2,0XFF);
 165   2          if(Time_flag==0)
 166   2          {
 167   3            Nixie_SetBuf(3,Nodot_SMG[Time[2]/16]);
 168   3            Nixie_SetBuf(4,Nodot_SMG[Time[2]%16]);
 169   3            Nixie_SetBuf(5,0XBF);   //间隔符
 170   3            Nixie_SetBuf(6,Nodot_SMG[Time[1]/16]);
 171   3            Nixie_SetBuf(7,Nodot_SMG[Time[1]%16]);
 172   3          }
 173   2          else if(Time_flag==1)
 174   2          {
 175   3            Nixie_SetBuf(3,Nodot_SMG[Time[1]/16]);
 176   3            Nixie_SetBuf(4,Nodot_SMG[Time[1]%16]);
C51 COMPILER V9.59.0.0   MAIN                                                              04/07/2023 23:53:08 PAGE 4   

 177   3            Nixie_SetBuf(5,0XBF);   //间隔符
 178   3            Nixie_SetBuf(6,Nodot_SMG[Time[0]/16]);
 179   3            Nixie_SetBuf(7,Nodot_SMG[Time[0]%16]);
 180   3          }
 181   2        }
 182   1        else if(Interface==2)
 183   1        {
 184   2          Nixie_SetBuf(0,0XC1);
 185   2          Nixie_SetBuf(1,Nodot_SMG[Serial_Num]);
 186   2          Nixie_SetBuf(2,0XFF);
 187   2          Nixie_SetBuf(3,0XFF);
 188   2          Nixie_SetBuf(4,0XFF);
 189   2          Nixie_SetBuf(5,0XFF);
 190   2          Nixie_SetBuf(6,Nodot_SMG[T_parameter/10]);
 191   2          Nixie_SetBuf(7,Nodot_SMG[T_parameter%10]);
 192   2        }
 193   1      }
 194          void Timer0_Routine(void) interrupt 1
 195          {
 196   1        static uc T0_Count1;
 197   1        static uc T0_Count2;
 198   1        static uc T_Count;
 199   1        static uc C_Count;
 200   1        
 201   1        T0_Count1++;T0_Count2++;
 202   1        if(T0_Count1==2)
 203   1        {
 204   2          T0_Count1=0;
 205   2          Nixie_Loop();
 206   2        }
 207   1        if(T0_Count2==20)
 208   1        {
 209   2          T0_Count2=0;
 210   2          KEY_Loop();
 211   2        }
 212   1        
 213   1        T_Count++;
 214   1        if(T_Count==100)
 215   1        {
 216   2          T_Count=0;
 217   2          T_flag=1;
 218   2        }
 219   1        
 220   1        C_Count++;
 221   1        if(C_Count==50)
 222   1        {
 223   2          C_Count=0;
 224   2          C_flag=1;
 225   2        }
 226   1      }
 227          
 228          /*1ms的定时中断函数*/
 229          void Timer1_Routine() interrupt 3
 230          {
 231   1        static ui T1_Count1;
 232   1        static ui T1_Count2;
 233   1        if(L1_State==1&&RB_State==1)
 234   1        {
 235   2          T1_Count1++;
 236   2          if(T1_Count1>5000)    //达到5s
 237   2          {
 238   3            T1_Count1=0;
C51 COMPILER V9.59.0.0   MAIN                                                              04/07/2023 23:53:08 PAGE 5   

 239   3            L1_State=0;
 240   3            RB_State=0;
 241   3          }   
 242   2        }
 243   1        
 244   1        if(L3_flag==1)
 245   1        {
 246   2          T1_Count2++;
 247   2          if(T1_Count2==100)    //达到0.1s
 248   2          {
 249   3            T1_Count2=0;
 250   3            L3_State=~L3_State;
 251   3          }
 252   2        }
 253   1      }
 254          
 255          void main()
 256          {
 257   1        Sys_Init();
 258   1        Timer0Init();
 259   1        Timer1Init();
 260   1        Write_Time(Time);
 261   1        DS18B20_ConvertT();
 262   1        Delay750ms();
 263   1        while(1)
 264   1        {
 265   2          EA=0;
 266   2          USE_LED();
 267   2          USE_RB();
 268   2          EA=1;
 269   2          USE_DS1302();
 270   2          USE_DS18B20();
 271   2          USE_KEY();
 272   2          USE_SMG();
 273   2        }
 274   1      }
 275          
 276          /*偶尔出现的问题：在温度控制模式下继电器有时候会间断自吸合断开（不是由于LED的影响）*/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    908    ----
   CONSTANT SIZE    =     32    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     22    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =     10    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
