C51 COMPILER V9.59.0.0   MAIN                                                              04/02/2023 11:03:56 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\KEIL\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main.ls
                    -t) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "LED.h"
   2          #include "RB.h"
   3          #include "Nixie.h"
   4          #include "Timer.h"
   5          #include "KEY.h"
   6          #include "Sonic.h"
   7          #include "UART.h"
   8          #include <stdio.h>
   9          
  10          uc code Nodot_SMG[16]={~0x3F,~0x06,~0x5B,~0x4F,~0x66,~0x6D,~0x7D,~0x07,~0x7F,~0x6F,~0x77,~0x7C,~0x39,~0x5E
             -,~0x79,~0x71};
  11          unsigned char Buf[50];
  12          uc KeyNum;
  13          ui Distance;
  14          ui Distance_P=30;
  15          bit Interface;
  16          bit Sonic_flag;
  17          bit L3_flag;
  18          bit L3_State;
  19          bit Send_flag=1;
  20          void Sys_Init()
  21          {
  22   1        LED_Init();
  23   1        RB_Init();
  24   1      }
  25          
  26          void USE_Sonic()
  27          {
  28   1        if(Sonic_flag==1)
  29   1        {
  30   2          Sonic_flag=0;
  31   2          Distance=Sonic_Work();
  32   2        }
  33   1        if(Distance>Distance_P){L3_flag=1;}
  34   1        else{L3_flag=0;}
  35   1      }
  36          
  37          void USE_UART()
  38          {
  39   1        if(Send_flag==1)
  40   1        {
  41   2          Send_flag=0;
  42   2          sprintf(Buf,"Distance:%dcm\r\n",Distance);//Sprintf（包含在stdio.h中）将数据存入Buf数组中（Sprintf函数第
             -一个参数是空数组，第二个要存入数组的数据）
  43   2          UART_SendString(Buf);
  44   2        }
  45   1      }
  46          void USE_LED()
  47          {
  48   1        LED_Init();
  49   1        if(Interface==0){L1=0;L2=1;}
  50   1        else{L1=1;L2=0;}
  51   1          
  52   1        if(L3_State==1){L3=0;}
C51 COMPILER V9.59.0.0   MAIN                                                              04/02/2023 11:03:56 PAGE 2   

  53   1        else{L3=1;}
  54   1          
  55   1        P2&=0X1F;
  56   1      }
  57          
  58          void USE_KEY()
  59          {
  60   1        KeyNum=KEY();
  61   1        if(KeyNum==4)   //S4-界面切换按键
  62   1        {
  63   2          Interface=~Interface;
  64   2        }
  65   1        if(Interface==0)
  66   1        {
  67   2          if(KeyNum==8)   //S8-参数按键
  68   2          {
  69   3            Distance_P=Distance;
  70   3          }
  71   2        }
  72   1        if(Interface==1)
  73   1        {
  74   2          if(KeyNum==12)    //S12-参数加设置按键
  75   2          {
  76   3            Distance_P+=10;
  77   3          }
  78   2          if(KeyNum==16)    //S16-参数减设置按键
  79   2          {
  80   3            Distance_P-=10;
  81   3            if(Distance_P<=0){Distance_P=0;}
  82   3          }
  83   2        }
  84   1        if(KeyNum==9)
  85   1        {
  86   2          Send_flag=1;
  87   2        }
  88   1        
  89   1      }
  90          
  91          void USE_SMG()
  92          {
  93   1        if(Interface==0)
  94   1        {
  95   2          Nixie_SetBuf(0,0XC1);   //标识符-U
  96   2          Nixie_SetBuf(1,Nodot_SMG[1]);
  97   2          Nixie_SetBuf(2,0XFF);
  98   2          Nixie_SetBuf(3,0XFF);
  99   2          Nixie_SetBuf(4,0XFF);
 100   2          Nixie_SetBuf(5,Nodot_SMG[Distance/100]);
 101   2          Nixie_SetBuf(6,Nodot_SMG[Distance/10%10]);
 102   2          Nixie_SetBuf(7,Nodot_SMG[Distance%10]);
 103   2        }
 104   1        else if(Interface==1)
 105   1        {
 106   2          Nixie_SetBuf(0,0XC1);   //标识符-U
 107   2          Nixie_SetBuf(1,Nodot_SMG[2]);
 108   2          Nixie_SetBuf(2,0XFF);
 109   2          Nixie_SetBuf(3,0XFF);
 110   2          Nixie_SetBuf(4,0XFF);
 111   2          Nixie_SetBuf(5,Nodot_SMG[Distance_P/100]);
 112   2          Nixie_SetBuf(6,Nodot_SMG[Distance_P/10%10]);
 113   2          Nixie_SetBuf(7,Nodot_SMG[Distance_P%10]);
 114   2        }
C51 COMPILER V9.59.0.0   MAIN                                                              04/02/2023 11:03:56 PAGE 3   

 115   1      }
 116          void main()
 117          {
 118   1        Sys_Init();
 119   1        Timer0Init();
 120   1        Timer1Init();
 121   1        UartInit();
 122   1        
 123   1        while(1)
 124   1        {
 125   2          EA=0;
 126   2          USE_LED();
 127   2          EA=1;
 128   2          USE_UART();
 129   2          USE_Sonic();
 130   2          USE_KEY();
 131   2          USE_SMG();
 132   2        }
 133   1      }
 134          
 135          
 136          void Timer1_Routine() interrupt 3
 137          {
 138   1        static uc T0_Count1;
 139   1        static uc T0_Count2;
 140   1        static uc Sonic_Count;
 141   1        static uc L3_Count;
 142   1        T0_Count1++;
 143   1        if(T0_Count1==2)
 144   1        {
 145   2          T0_Count1=0;
 146   2          Nixie_Loop();
 147   2        }
 148   1        T0_Count2++;
 149   1        if(T0_Count2==10)
 150   1        {
 151   2          T0_Count2=0;
 152   2          KEY_Loop();
 153   2        }
 154   1        
 155   1        Sonic_Count++;
 156   1        if(Sonic_Count==200)
 157   1        {
 158   2          Sonic_Count=0;
 159   2          Sonic_flag=1;
 160   2        }
 161   1        
 162   1        if(L3_flag==1)
 163   1        {
 164   2          L3_Count++;
 165   2          if(L3_Count==200)
 166   2          {
 167   3            L3_Count=0;
 168   3            L3_State=~L3_State;
 169   3          }
 170   2        }
 171   1        else{L3_Count=0;L3_State=0;}
 172   1      }
 173          
 174          /*注意事项：打开串口中断一定要编写串口中断函数。否则程序会卡死。具体原因目前没有找到*/
 175          void Uart_Routine(void) interrupt 4
 176          {
C51 COMPILER V9.59.0.0   MAIN                                                              04/02/2023 11:03:56 PAGE 4   

 177   1      //  if(RI==1)
 178   1      //  {
 179   1      //    RI=0;
 180   1      //  }
 181   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    632    ----
   CONSTANT SIZE    =     32    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     59    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      5    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
