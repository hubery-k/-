C51 COMPILER V9.59.0.0   MAIN                                                              04/07/2023 20:37:18 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\KEIL\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main.ls
                    -t) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <STC15F2K60S2.H>
   2          #include "LED.h"
   3          #include "RB.h"
   4          #include "KEY.h"
   5          #include "Nixie.h"
   6          #include "AD.h"
   7          #include "Timer.h"
   8          #include "Delay.h"
   9          
  10          unsigned char code Nodot_duanma[]={0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90,0x88,0x83,0xc6,0xa1,0
             -x86,0x8e};
  11          unsigned char code dot_duanma[]={0x40,0x79,0x24,0x30,0x19,0x12,0x02,0x78,0x00,0x10,0x08,0x03,0x46,0x21,0x0
             -6,0x0e};
  12          
  13          /*使用硬件：独立按键、数码管、AD、继电器、LED*/
  14          unsigned char KeyNum;
  15          float adc_vol;                  //AD转换电压――变量
  16          float F_Price;                  //价格浮点数形式――变量
  17          unsigned char W_Price;          //价格整数形式――变量
  18          unsigned int Water_10ML;        //出水总量――变量
  19          unsigned char count_2;            //中断计数――变量
  20          unsigned char count_1;            //中断计数――变量
  21          unsigned char count_0;            //中断计数――变量
  22          unsigned char SMG_State;        //数码管显示状态――变量
  23          bit Over;
  24          bit RELAY_State;
  25          bit LED_State;
  26          bit AD_flag;
  27          
  28          
  29          
  30          
  31          void Sys_Init(void)
  32          {
  33   1        LED_Init();   //关闭所有LED
  34   1        RB_Init();//关闭继电器蜂鸣器
  35   1        P2&=0X1F;//锁存
  36   1      }
  37          
  38          /*按键应用函数*/
  39          void USE_KEY(void)
  40          {
  41   1        KeyNum=KEY();
  42   1      
  43   1          if(KeyNum==7)//s7
  44   1          {
  45   2            RELAY_State=1;    //继电器打开
  46   2            SMG_State=1;    //数码管出水状态
  47   2            TR0=1;  //开始计时
  48   2          }
  49   1          if(KeyNum==6||Over==1)//s6
  50   1          {
  51   2            RELAY_State=0;    //继电器关闭
  52   2            SMG_State=2;    //数码管停水状态
C51 COMPILER V9.59.0.0   MAIN                                                              04/07/2023 20:37:18 PAGE 2   

  53   2            count_2=0;
  54   2            Water_10ML=0;
  55   2            TR0=0;  //停止计时
  56   2            Over=0;
  57   2          }
  58   1      }
  59          
  60          /*数码管应用显示函数*/
  61          void USE_SMG(void)
  62          {
  63   1        /*显示费率*/
  64   1        Nixie_SetBuf(1,dot_duanma[0]);
  65   1        Nixie_SetBuf(2,Nodot_duanma[5]);
  66   1        Nixie_SetBuf(3,Nodot_duanma[0]);
  67   1      
  68   1        /*显示出水总量（出水时）和总价（停水时）*/
  69   1        if(SMG_State==1)//出水时
  70   1        {
  71   2          Nixie_SetBuf(4,Nodot_duanma[Water_10ML/1000]);
  72   2          Nixie_SetBuf(5,dot_duanma[(Water_10ML/100)%10]);
  73   2          Nixie_SetBuf(6,Nodot_duanma[(Water_10ML/10)%10]);
  74   2          Nixie_SetBuf(7,Nodot_duanma[Water_10ML%10]);
  75   2        }
  76   1        else if(SMG_State==2)//停水时
  77   1        {
  78   2          Nixie_SetBuf(4,Nodot_duanma[W_Price/1000]);
  79   2          Nixie_SetBuf(5,dot_duanma[(W_Price/100)%10]);
  80   2          Nixie_SetBuf(6,Nodot_duanma[(W_Price/10)%10]);
  81   2          Nixie_SetBuf(7,Nodot_duanma[W_Price%10]);
  82   2        }
  83   1      }
  84          
  85          /*AD应用转换函数*/
  86          void USE_AD(void)
  87          {
  88   1        if(AD_flag==1)
  89   1        {
  90   2          AD_flag=0;
  91   2          adc_vol=AD_Read()*(5.0/255);
  92   2          if(adc_vol<1.25){LED_State=1;}
  93   2          else{LED_State=0;}
  94   2        }
  95   1      }
  96          
  97          void USE_LED(void)
  98          {
  99   1        if(LED_State==1){LED_Control(0X01);}
 100   1        else{LED_Control(0X00);}
 101   1      }
 102          
 103          void USE_RB(void)
 104          {
 105   1        if(RELAY_State==1){RB_Control(0X10);}
 106   1        else{RB_Control(0X00);}
 107   1      }
 108          
 109          
 110          
 111          /*定时中断函数0（10ms进入一次）*/
 112          void Timer0_Routine(void) interrupt 1
 113          {
 114   1        count_2++;
C51 COMPILER V9.59.0.0   MAIN                                                              04/07/2023 20:37:18 PAGE 3   

 115   1        if(count_2>=10)
 116   1        {
 117   2          count_2=0;
 118   2          Water_10ML+=1;  //100ms-10ML
 119   2        }
 120   1          //价格转换
 121   1        F_Price=Water_10ML*0.005;
 122   1        W_Price=F_Price*100;
 123   1      
 124   1      }
 125          
 126          unsigned char i;
 127          /*定时中断函数1（1ms进入一次）*/
 128          void Timer1_Routine(void) interrupt 3
 129          {
 130   1        static unsigned char AD_Count;
 131   1      
 132   1        
 133   1        count_0++;
 134   1        count_1++;
 135   1        if(count_0==2)//2ms扫描显示数码管1次
 136   1        {
 137   2          count_0=0;
 138   2          Nixie_Loop();
 139   2        }
 140   1        if(count_1==10)//20ms扫描显示按键1次
 141   1        {
 142   2          count_1=0;
 143   2          KEY_Loop();
 144   2        }
 145   1        
 146   1        AD_Count++;
 147   1        if(AD_Count==50)    //达到50ms
 148   1        {
 149   2          AD_Count=0;
 150   2          AD_flag=1;
 151   2        }
 152   1      }
 153          
 154          /*界定范围函数*/
 155          void Def_Scope(void)
 156          {
 157   1        if(Water_10ML>=99)    //题目要求9999.这里为了测试写成了99
 158   1        {
 159   2          Over=1;
 160   2          TR0 = 0;
 161   2        }
 162   1      }
 163          
 164          void main()
 165          {
 166   1        Sys_Init();
 167   1        Timer0Init();
 168   1        Timer1Init();
 169   1        while(1)
 170   1        {
 171   2          EA=0;   //防止中断影响
 172   2          USE_RB();
 173   2          USE_LED();
 174   2          EA=1;
 175   2          USE_AD();
 176   2          Def_Scope();
C51 COMPILER V9.59.0.0   MAIN                                                              04/07/2023 20:37:18 PAGE 4   

 177   2          USE_SMG();
 178   2          USE_KEY();
 179   2        }
 180   1      }
 181          
 182          /*出现的问题及解决方法：*/
 183          
 184          /*
 185            1. 在操作LED、继电器、蜂鸣器的时候，正好碰到定时器中断，导致P0口数据不稳定，导致LED、继电器、蜂鸣器异常。
 186            解决方法：运行到LED和继电器蜂鸣器的时候不打开中断。
 187          */
 188          /*
 189            2.中断会影响软件的模拟时序的数据传输。解决方法是在调用时序进行数据传输时将中断EA置0关闭，等待数据读取或写
             -入成功再置1代开总中断。
 190          最好的解决方法是：在中断中定义标志位，当达到一定时间后标志位置1，在主程序中做判断当标志位为1时读取数据。这
             -样可以省去Delay的过程还不会与中断冲突。
 191          */


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    697    ----
   CONSTANT SIZE    =     32    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     18    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      4    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
